extends ../layout

block content
  .row(ng-app="admin")
    base(href="/admin/")
    script(type="text/ng-template" id="list.html")
      .col-sm-2
        ul.nav.nav-pills.nav-stacked
          li(ng-class="{active: selected == 'user'}")
            a(href='#/user') Users
          li(ng-class="{active: selected == 'question'}")
            a(href='#/question') Questions
          li(ng-class="{active: selected == 'gender'}")
            a(href='#/gender') Genders

      .col-sm-10
        .panel.panel-default
          h1.panel-heading {{tableheader}} {{selected}}
          .panel-body
            table.table.table-striped
              thead
                tr
                  th(ng-repeat="field in fields") {{field}}
                  th edit
                  th remove
              tbody
                tr(ng-repeat="doc in docs")
                  td(ng-repeat="field in fields") {{doc[field]}}
                  td: a(href="/admin/edit/{{selected}}/{{doc._id}}") edit
                  td: a(href="/api/remove/{{selected}}/{{doc._id}}") remove

    div(ng-view)

block scripts

  script
    :coffee
      console.log 'HAI DENNY'

      angular.module("admin", ["adminServices", "ngRoute"]).config [
        '$routeProvider', '$locationProvider',
        ($routeProvider, $locationProvider) ->

          $routeProvider

            .when '/user',
              controller: 'UserController'
              templateUrl: 'list.html'

            .when '/question',
              controller: 'QuestionController'
              templateUrl: 'list.html'

            .when '/gender',
              controller: 'GenderController'
              templateUrl: 'list.html'

            .otherwise
              redirectTo: '/user'
        ]
        .controller "UserController", [
          "$scope", "user",
          ($scope, user) ->
            $scope.selected = "user"
            $scope.tableheader = "Users"
            $scope.fields = ['email', 'nickname']

            docs = user.query {}, ->
              $scope.docs = docs
        ]
        .controller "QuestionController", [
          "$scope", "question",
          ($scope, question) ->
            $scope.selected = "question"
            $scope.tableheader = "Match Questions"
            $scope.fields = ['name', 'text']

            docs = question.query {}, ->
              $scope.docs = docs
        ]
        .controller "GenderController", [
          "$scope", "gender",
          ($scope, gender) ->
            $scope.selected = "gender"
            $scope.tableheader = "Genders"
            $scope.fields = ['label', 'code']

            docs = gender.query {}, ->
              $scope.docs = docs
        ]
        .controller "AdminController", [
          "$scope", "user", "question", "gender",
          ($scope, user, question, gender) ->
            $scope.select = (model) ->
              switch model
                when "user"
                  $scope.tableheader = "Users"
                  $scope.fields = ['email', 'nickname']
                  resource = user
                when "question"
                  $scope.tableheader = "Match Questions"
                  $scope.fields = ['name', 'text']
                  resource = question
                when "gender"
                  $scope.tableheader = "Genders"
                  $scope.fields = ['label', 'code']
                  resource = gender

              docs = resource.query {}, ->
                $scope.docs = docs

            resource = null
            $scope.docs = []
            $scope.fields = []
        ]

      angular.module("adminServices", ["ngResource"])

        .factory "user", ($resource) ->
          $resource '/api/user', {}

        .factory "question", ($resource) ->
          $resource '/api/question', {}

        .factory "gender", ($resource) ->
          $resource '/api/gender', {}
